(cl:in-package #:SB-POSIX)
(cl:eval-when (:compile-toplevel)
  (cl:defparameter *integer-sizes* (cl:make-hash-table))
  (cl:setf (cl:gethash 1 *integer-sizes*) 'sb-alien:char)
  (cl:setf (cl:gethash 2 *integer-sizes*) 'sb-alien:short)
  (cl:setf (cl:gethash 4 *integer-sizes*) 'sb-alien:long)
  (cl:setf (cl:gethash 4 *integer-sizes*) 'sb-alien:int)
)
(cl:defconstant AF-INET 2 "IP Protocol family")
(cl:export 'AF-INET)
(cl:eval-when (:compile-toplevel :load-toplevel :execute) (sb-alien:define-alien-type UID-T (sb-alien:unsigned 32)))
(cl:eval-when (:compile-toplevel :load-toplevel :execute) (sb-alien:define-alien-type GID-T (sb-alien:unsigned 32)))
(cl:eval-when (:compile-toplevel :load-toplevel :execute) (sb-alien:define-alien-type NLINK-T (sb-alien:unsigned 16)))
(cl:eval-when (:compile-toplevel :load-toplevel :execute) (sb-alien:define-alien-type PID-T (sb-alien:signed 32)))
(cl:eval-when (:compile-toplevel :load-toplevel :execute) (sb-alien:define-alien-type INO-T (sb-alien:unsigned 32)))
(cl:eval-when (:compile-toplevel :load-toplevel :execute) (sb-alien:define-alien-type TIME-T (sb-alien:signed 32)))
(cl:eval-when (:compile-toplevel :load-toplevel :execute) (sb-alien:define-alien-type DEV-T (sb-alien:signed 32)))
(cl:defconstant SIGHUP 1 "terminal line hangup.")
(cl:export 'SIGHUP)
(cl:defconstant SIGINT 2 "interrupt program.")
(cl:export 'SIGINT)
(cl:defconstant SIGQUIT 3 "quit program.")
(cl:export 'SIGQUIT)
(cl:defconstant SIGILL 4 "illegal instruction.")
(cl:export 'SIGILL)
(cl:defconstant SIGTRAP 5 "trace trap.")
(cl:export 'SIGTRAP)
(cl:defconstant SIGABRT 6 "abort program (formerly SIGIOT).")
(cl:export 'SIGABRT)
(cl:defconstant SIGEMT 7 "emulate instruction executed.")
(cl:export 'SIGEMT)
(cl:defconstant SIGFPE 8 "floating-point exception.")
(cl:export 'SIGFPE)
(cl:defconstant SIGKILL 9 "kill program.")
(cl:export 'SIGKILL)
(cl:defconstant SIGBUS 10 "bus error.")
(cl:export 'SIGBUS)
(cl:defconstant SIGSEGV 11 "segmentation violation.")
(cl:export 'SIGSEGV)
(cl:defconstant SIGSYS 12 "non-existent system call invoked.")
(cl:export 'SIGSYS)
(cl:defconstant SIGPIPE 13 "write on a pipe with no reader.")
(cl:export 'SIGPIPE)
(cl:defconstant SIGALRM 14 "real-time timer expired.")
(cl:export 'SIGALRM)
(cl:defconstant SIGTERM 15 "software termination signal.")
(cl:export 'SIGTERM)
(cl:defconstant SIGURG 16 "urgent condition present on socket.")
(cl:export 'SIGURG)
(cl:defconstant SIGSTOP 17 "stop (cannot be caught or ignored).")
(cl:export 'SIGSTOP)
(cl:defconstant SIGTSTP 18 "stop signal generated from keyboard.")
(cl:export 'SIGTSTP)
(cl:defconstant SIGCONT 19 "continue after stop.")
(cl:export 'SIGCONT)
(cl:defconstant SIGCHLD 20 "child status has changed.")
(cl:export 'SIGCHLD)
(cl:defconstant SIGTTIN 21 "background read attempted from control terminal.")
(cl:export 'SIGTTIN)
(cl:defconstant SIGTTOU 22 "background write attempted to control terminal.")
(cl:export 'SIGTTOU)
(cl:defconstant SIGIO 23 "I/O is possible on a descriptor (see fcntl(2)).")
(cl:export 'SIGIO)
(cl:defconstant SIGXCPU 24 "cpu time limit exceeded (see setrlimit(2)).")
(cl:export 'SIGXCPU)
(cl:defconstant SIGXFSZ 25 "file size limit exceeded (see setrlimit(2)).")
(cl:export 'SIGXFSZ)
(cl:defconstant SIGVTALRM 26 "virtual time alarm (see setitimer(2)).")
(cl:export 'SIGVTALRM)
(cl:defconstant SIGPROF 27 "profiling timer alarm (see setitimer(2)).")
(cl:export 'SIGPROF)
(cl:defconstant SIGWINCH 28 "Window size change.")
(cl:export 'SIGWINCH)
(sb-int:style-warn "Couldn't grovel for SIGPWR (unknown to the C compiler).")
(cl:export 'SIGPWR)
(cl:defconstant SIGUSR1 30 "User defined signal 1.")
(cl:export 'SIGUSR1)
(cl:defconstant SIGUSR2 31 "User defined signal 2.")
(cl:export 'SIGUSR2)
(sb-int:style-warn "Couldn't grovel for SIGRTMIN (unknown to the C compiler).")
(cl:export 'SIGRTMIN)
(sb-int:style-warn "Couldn't grovel for SIGRTMAX (unknown to the C compiler).")
(cl:export 'SIGRTMAX)
(cl:defconstant EPERM 1 "NIL")
(cl:setf (get 'EPERM 'errno) t)
(cl:export 'EPERM)
(cl:defconstant ENOENT 2 "NIL")
(cl:setf (get 'ENOENT 'errno) t)
(cl:export 'ENOENT)
(cl:defconstant ESRCH 3 "NIL")
(cl:setf (get 'ESRCH 'errno) t)
(cl:export 'ESRCH)
(cl:defconstant EINTR 4 "NIL")
(cl:setf (get 'EINTR 'errno) t)
(cl:export 'EINTR)
(cl:defconstant EIO 5 "NIL")
(cl:setf (get 'EIO 'errno) t)
(cl:export 'EIO)
(cl:defconstant ENXIO 6 "NIL")
(cl:setf (get 'ENXIO 'errno) t)
(cl:export 'ENXIO)
(cl:defconstant E2BIG 7 "NIL")
(cl:setf (get 'E2BIG 'errno) t)
(cl:export 'E2BIG)
(cl:defconstant ENOEXEC 8 "NIL")
(cl:setf (get 'ENOEXEC 'errno) t)
(cl:export 'ENOEXEC)
(cl:defconstant EBADF 9 "NIL")
(cl:setf (get 'EBADF 'errno) t)
(cl:export 'EBADF)
(cl:defconstant ECHILD 10 "NIL")
(cl:setf (get 'ECHILD 'errno) t)
(cl:export 'ECHILD)
(cl:defconstant EAGAIN 35 "NIL")
(cl:setf (get 'EAGAIN 'errno) t)
(cl:export 'EAGAIN)
(cl:defconstant ENOMEM 12 "NIL")
(cl:setf (get 'ENOMEM 'errno) t)
(cl:export 'ENOMEM)
(cl:defconstant EACCES 13 "NIL")
(cl:setf (get 'EACCES 'errno) t)
(cl:export 'EACCES)
(cl:defconstant EFAULT 14 "NIL")
(cl:setf (get 'EFAULT 'errno) t)
(cl:export 'EFAULT)
(cl:defconstant ENOTBLK 15 "NIL")
(cl:setf (get 'ENOTBLK 'errno) t)
(cl:export 'ENOTBLK)
(cl:defconstant EBUSY 16 "NIL")
(cl:setf (get 'EBUSY 'errno) t)
(cl:export 'EBUSY)
(cl:defconstant EEXIST 17 "NIL")
(cl:setf (get 'EEXIST 'errno) t)
(cl:export 'EEXIST)
(cl:defconstant EXDEV 18 "NIL")
(cl:setf (get 'EXDEV 'errno) t)
(cl:export 'EXDEV)
(cl:defconstant ENODEV 19 "NIL")
(cl:setf (get 'ENODEV 'errno) t)
(cl:export 'ENODEV)
(cl:defconstant ENOTDIR 20 "NIL")
(cl:setf (get 'ENOTDIR 'errno) t)
(cl:export 'ENOTDIR)
(cl:defconstant EISDIR 21 "NIL")
(cl:setf (get 'EISDIR 'errno) t)
(cl:export 'EISDIR)
(cl:defconstant EINVAL 22 "NIL")
(cl:setf (get 'EINVAL 'errno) t)
(cl:export 'EINVAL)
(cl:defconstant ENFILE 23 "NIL")
(cl:setf (get 'ENFILE 'errno) t)
(cl:export 'ENFILE)
(cl:defconstant EMFILE 24 "NIL")
(cl:setf (get 'EMFILE 'errno) t)
(cl:export 'EMFILE)
(cl:defconstant ENOTTY 25 "NIL")
(cl:setf (get 'ENOTTY 'errno) t)
(cl:export 'ENOTTY)
(cl:defconstant ETXTBSY 26 "NIL")
(cl:setf (get 'ETXTBSY 'errno) t)
(cl:export 'ETXTBSY)
(cl:defconstant EFBIG 27 "NIL")
(cl:setf (get 'EFBIG 'errno) t)
(cl:export 'EFBIG)
(cl:defconstant ENOSPC 28 "NIL")
(cl:setf (get 'ENOSPC 'errno) t)
(cl:export 'ENOSPC)
(cl:defconstant ESPIPE 29 "NIL")
(cl:setf (get 'ESPIPE 'errno) t)
(cl:export 'ESPIPE)
(cl:defconstant EROFS 30 "NIL")
(cl:setf (get 'EROFS 'errno) t)
(cl:export 'EROFS)
(cl:defconstant EMLINK 31 "NIL")
(cl:setf (get 'EMLINK 'errno) t)
(cl:export 'EMLINK)
(cl:defconstant EPIPE 32 "NIL")
(cl:setf (get 'EPIPE 'errno) t)
(cl:export 'EPIPE)
(cl:defconstant EDOM 33 "NIL")
(cl:setf (get 'EDOM 'errno) t)
(cl:export 'EDOM)
(cl:defconstant ERANGE 34 "NIL")
(cl:setf (get 'ERANGE 'errno) t)
(cl:export 'ERANGE)
(cl:defconstant EDEADLK 11 "NIL")
(cl:setf (get 'EDEADLK 'errno) t)
(cl:export 'EDEADLK)
(cl:defconstant ENAMETOOLONG 63 "NIL")
(cl:setf (get 'ENAMETOOLONG 'errno) t)
(cl:export 'ENAMETOOLONG)
(cl:defconstant ENOLCK 77 "NIL")
(cl:setf (get 'ENOLCK 'errno) t)
(cl:export 'ENOLCK)
(cl:defconstant ENOSYS 78 "NIL")
(cl:setf (get 'ENOSYS 'errno) t)
(cl:export 'ENOSYS)
(cl:defconstant ENOTEMPTY 66 "NIL")
(cl:setf (get 'ENOTEMPTY 'errno) t)
(cl:export 'ENOTEMPTY)
(cl:defconstant ELOOP 62 "NIL")
(cl:setf (get 'ELOOP 'errno) t)
(cl:export 'ELOOP)
(cl:defconstant EWOULDBLOCK 35 "NIL")
(cl:setf (get 'EWOULDBLOCK 'errno) t)
(cl:export 'EWOULDBLOCK)
(cl:defconstant ENOMSG 91 "NIL")
(cl:setf (get 'ENOMSG 'errno) t)
(cl:export 'ENOMSG)
(cl:defconstant EIDRM 90 "NIL")
(cl:setf (get 'EIDRM 'errno) t)
(cl:export 'EIDRM)
(sb-int:style-warn "Couldn't grovel for ECHRNG (unknown to the C compiler).")
(cl:export 'ECHRNG)
(sb-int:style-warn "Couldn't grovel for EL2NSYNC (unknown to the C compiler).")
(cl:export 'EL2NSYNC)
(sb-int:style-warn "Couldn't grovel for EL3HLT (unknown to the C compiler).")
(cl:export 'EL3HLT)
(sb-int:style-warn "Couldn't grovel for EL3RST (unknown to the C compiler).")
(cl:export 'EL3RST)
(sb-int:style-warn "Couldn't grovel for ELNRNG (unknown to the C compiler).")
(cl:export 'ELNRNG)
(sb-int:style-warn "Couldn't grovel for EUNATCH (unknown to the C compiler).")
(cl:export 'EUNATCH)
(sb-int:style-warn "Couldn't grovel for ENOCSI (unknown to the C compiler).")
(cl:export 'ENOCSI)
(sb-int:style-warn "Couldn't grovel for EL2HLT (unknown to the C compiler).")
(cl:export 'EL2HLT)
(sb-int:style-warn "Couldn't grovel for EBADE (unknown to the C compiler).")
(cl:export 'EBADE)
(sb-int:style-warn "Couldn't grovel for EBADR (unknown to the C compiler).")
(cl:export 'EBADR)
(sb-int:style-warn "Couldn't grovel for EXFULL (unknown to the C compiler).")
(cl:export 'EXFULL)
(sb-int:style-warn "Couldn't grovel for ENOANO (unknown to the C compiler).")
(cl:export 'ENOANO)
(sb-int:style-warn "Couldn't grovel for EBADRQC (unknown to the C compiler).")
(cl:export 'EBADRQC)
(sb-int:style-warn "Couldn't grovel for EBADSLT (unknown to the C compiler).")
(cl:export 'EBADSLT)
(sb-int:style-warn "Couldn't grovel for EDEADLOCK (unknown to the C compiler).")
(cl:export 'EDEADLOCK)
(sb-int:style-warn "Couldn't grovel for EBFONT (unknown to the C compiler).")
(cl:export 'EBFONT)
(cl:defconstant ENOSTR 99 "NIL")
(cl:setf (get 'ENOSTR 'errno) t)
(cl:export 'ENOSTR)
(cl:defconstant ENODATA 96 "NIL")
(cl:setf (get 'ENODATA 'errno) t)
(cl:export 'ENODATA)
(cl:defconstant ETIME 101 "NIL")
(cl:setf (get 'ETIME 'errno) t)
(cl:export 'ETIME)
(cl:defconstant ENOSR 98 "NIL")
(cl:setf (get 'ENOSR 'errno) t)
(cl:export 'ENOSR)
(sb-int:style-warn "Couldn't grovel for ENONET (unknown to the C compiler).")
(cl:export 'ENONET)
(sb-int:style-warn "Couldn't grovel for ENOPKG (unknown to the C compiler).")
(cl:export 'ENOPKG)
(cl:defconstant EREMOTE 71 "NIL")
(cl:setf (get 'EREMOTE 'errno) t)
(cl:export 'EREMOTE)
(cl:defconstant ENOLINK 97 "NIL")
(cl:setf (get 'ENOLINK 'errno) t)
(cl:export 'ENOLINK)
(sb-int:style-warn "Couldn't grovel for EADV (unknown to the C compiler).")
(cl:export 'EADV)
(sb-int:style-warn "Couldn't grovel for ESRMNT (unknown to the C compiler).")
(cl:export 'ESRMNT)
(sb-int:style-warn "Couldn't grovel for ECOMM (unknown to the C compiler).")
(cl:export 'ECOMM)
(cl:defconstant EPROTO 100 "NIL")
(cl:setf (get 'EPROTO 'errno) t)
(cl:export 'EPROTO)
(cl:defconstant EMULTIHOP 95 "NIL")
(cl:setf (get 'EMULTIHOP 'errno) t)
(cl:export 'EMULTIHOP)
(sb-int:style-warn "Couldn't grovel for EDOTDOT (unknown to the C compiler).")
(cl:export 'EDOTDOT)
(cl:defconstant EBADMSG 94 "NIL")
(cl:setf (get 'EBADMSG 'errno) t)
(cl:export 'EBADMSG)
(cl:defconstant EOVERFLOW 84 "NIL")
(cl:setf (get 'EOVERFLOW 'errno) t)
(cl:export 'EOVERFLOW)
(sb-int:style-warn "Couldn't grovel for ENOTUNIQ (unknown to the C compiler).")
(cl:export 'ENOTUNIQ)
(sb-int:style-warn "Couldn't grovel for EBADFD (unknown to the C compiler).")
(cl:export 'EBADFD)
(sb-int:style-warn "Couldn't grovel for EREMCHG (unknown to the C compiler).")
(cl:export 'EREMCHG)
(sb-int:style-warn "Couldn't grovel for ELIBACC (unknown to the C compiler).")
(cl:export 'ELIBACC)
(sb-int:style-warn "Couldn't grovel for ELIBBAD (unknown to the C compiler).")
(cl:export 'ELIBBAD)
(sb-int:style-warn "Couldn't grovel for ELIBSCN (unknown to the C compiler).")
(cl:export 'ELIBSCN)
(sb-int:style-warn "Couldn't grovel for ELIBMAX (unknown to the C compiler).")
(cl:export 'ELIBMAX)
(sb-int:style-warn "Couldn't grovel for ELIBEXEC (unknown to the C compiler).")
(cl:export 'ELIBEXEC)
(cl:defconstant EILSEQ 92 "NIL")
(cl:setf (get 'EILSEQ 'errno) t)
(cl:export 'EILSEQ)
(sb-int:style-warn "Couldn't grovel for ERESTART (unknown to the C compiler).")
(cl:export 'ERESTART)
(sb-int:style-warn "Couldn't grovel for ESTRPIPE (unknown to the C compiler).")
(cl:export 'ESTRPIPE)
(cl:defconstant EUSERS 68 "NIL")
(cl:setf (get 'EUSERS 'errno) t)
(cl:export 'EUSERS)
(cl:defconstant ENOTSOCK 38 "NIL")
(cl:setf (get 'ENOTSOCK 'errno) t)
(cl:export 'ENOTSOCK)
(cl:defconstant EDESTADDRREQ 39 "NIL")
(cl:setf (get 'EDESTADDRREQ 'errno) t)
(cl:export 'EDESTADDRREQ)
(cl:defconstant EMSGSIZE 40 "NIL")
(cl:setf (get 'EMSGSIZE 'errno) t)
(cl:export 'EMSGSIZE)
(cl:defconstant EPROTOTYPE 41 "NIL")
(cl:setf (get 'EPROTOTYPE 'errno) t)
(cl:export 'EPROTOTYPE)
(cl:defconstant ENOPROTOOPT 42 "NIL")
(cl:setf (get 'ENOPROTOOPT 'errno) t)
(cl:export 'ENOPROTOOPT)
(cl:defconstant EPROTONOSUPPORT 43 "NIL")
(cl:setf (get 'EPROTONOSUPPORT 'errno) t)
(cl:export 'EPROTONOSUPPORT)
(cl:defconstant ESOCKTNOSUPPORT 44 "NIL")
(cl:setf (get 'ESOCKTNOSUPPORT 'errno) t)
(cl:export 'ESOCKTNOSUPPORT)
(cl:defconstant EOPNOTSUPP 45 "NIL")
(cl:setf (get 'EOPNOTSUPP 'errno) t)
(cl:export 'EOPNOTSUPP)
(cl:defconstant EPFNOSUPPORT 46 "NIL")
(cl:setf (get 'EPFNOSUPPORT 'errno) t)
(cl:export 'EPFNOSUPPORT)
(cl:defconstant EAFNOSUPPORT 47 "NIL")
(cl:setf (get 'EAFNOSUPPORT 'errno) t)
(cl:export 'EAFNOSUPPORT)
(cl:defconstant EADDRINUSE 48 "NIL")
(cl:setf (get 'EADDRINUSE 'errno) t)
(cl:export 'EADDRINUSE)
(cl:defconstant EADDRNOTAVAIL 49 "NIL")
(cl:setf (get 'EADDRNOTAVAIL 'errno) t)
(cl:export 'EADDRNOTAVAIL)
(cl:defconstant ENETDOWN 50 "NIL")
(cl:setf (get 'ENETDOWN 'errno) t)
(cl:export 'ENETDOWN)
(cl:defconstant ENETUNREACH 51 "NIL")
(cl:setf (get 'ENETUNREACH 'errno) t)
(cl:export 'ENETUNREACH)
(cl:defconstant ENETRESET 52 "NIL")
(cl:setf (get 'ENETRESET 'errno) t)
(cl:export 'ENETRESET)
(cl:defconstant ECONNABORTED 53 "NIL")
(cl:setf (get 'ECONNABORTED 'errno) t)
(cl:export 'ECONNABORTED)
(cl:defconstant ECONNRESET 54 "NIL")
(cl:setf (get 'ECONNRESET 'errno) t)
(cl:export 'ECONNRESET)
(cl:defconstant ENOBUFS 55 "NIL")
(cl:setf (get 'ENOBUFS 'errno) t)
(cl:export 'ENOBUFS)
(cl:defconstant EISCONN 56 "NIL")
(cl:setf (get 'EISCONN 'errno) t)
(cl:export 'EISCONN)
(cl:defconstant ENOTCONN 57 "NIL")
(cl:setf (get 'ENOTCONN 'errno) t)
(cl:export 'ENOTCONN)
(cl:defconstant ESHUTDOWN 58 "NIL")
(cl:setf (get 'ESHUTDOWN 'errno) t)
(cl:export 'ESHUTDOWN)
(cl:defconstant ETOOMANYREFS 59 "NIL")
(cl:setf (get 'ETOOMANYREFS 'errno) t)
(cl:export 'ETOOMANYREFS)
(cl:defconstant ETIMEDOUT 60 "NIL")
(cl:setf (get 'ETIMEDOUT 'errno) t)
(cl:export 'ETIMEDOUT)
(cl:defconstant ECONNREFUSED 61 "NIL")
(cl:setf (get 'ECONNREFUSED 'errno) t)
(cl:export 'ECONNREFUSED)
(cl:defconstant EHOSTDOWN 64 "NIL")
(cl:setf (get 'EHOSTDOWN 'errno) t)
(cl:export 'EHOSTDOWN)
(cl:defconstant EHOSTUNREACH 65 "NIL")
(cl:setf (get 'EHOSTUNREACH 'errno) t)
(cl:export 'EHOSTUNREACH)
(cl:defconstant EALREADY 37 "NIL")
(cl:setf (get 'EALREADY 'errno) t)
(cl:export 'EALREADY)
(cl:defconstant EINPROGRESS 36 "NIL")
(cl:setf (get 'EINPROGRESS 'errno) t)
(cl:export 'EINPROGRESS)
(cl:defconstant ESTALE 70 "NIL")
(cl:setf (get 'ESTALE 'errno) t)
(cl:export 'ESTALE)
(sb-int:style-warn "Couldn't grovel for EUCLEAN (unknown to the C compiler).")
(cl:export 'EUCLEAN)
(sb-int:style-warn "Couldn't grovel for ENOTNAM (unknown to the C compiler).")
(cl:export 'ENOTNAM)
(sb-int:style-warn "Couldn't grovel for ENAVAIL (unknown to the C compiler).")
(cl:export 'ENAVAIL)
(sb-int:style-warn "Couldn't grovel for EREMOTEIO (unknown to the C compiler).")
(cl:export 'EREMOTEIO)
(cl:defconstant EDQUOT 69 "NIL")
(cl:setf (get 'EDQUOT 'errno) t)
(cl:export 'EDQUOT)
(sb-int:style-warn "Couldn't grovel for ENOMEDIUM (unknown to the C compiler).")
(cl:export 'ENOMEDIUM)
(sb-int:style-warn "Couldn't grovel for EMEDIUMTYPE (unknown to the C compiler).")
(cl:export 'EMEDIUMTYPE)
(cl:defconstant WNOHANG 1 "NIL")
(cl:export 'WNOHANG)
(cl:defconstant WUNTRACED 2 "NIL")
(cl:export 'WUNTRACED)
(cl:eval-when (:compile-toplevel :load-toplevel :execute) (sb-alien:define-alien-type MODE-T (sb-alien:unsigned 16)))
(cl:defconstant S-IFMT 61440 "NIL")
(cl:export 'S-IFMT)
(cl:defconstant S-IFIFO 4096 "NIL")
(cl:export 'S-IFIFO)
(cl:defconstant S-IFCHR 8192 "NIL")
(cl:export 'S-IFCHR)
(cl:defconstant S-IFDIR 16384 "NIL")
(cl:export 'S-IFDIR)
(cl:defconstant S-IFBLK 24576 "NIL")
(cl:export 'S-IFBLK)
(cl:defconstant S-IFREG 32768 "NIL")
(cl:export 'S-IFREG)
(cl:defconstant S-IFLNK 40960 "NIL")
(cl:export 'S-IFLNK)
(cl:defconstant S-IFSOCK 49152 "NIL")
(cl:export 'S-IFSOCK)
(cl:defconstant S-IFWHT 57344 "NIL")
(cl:export 'S-IFWHT)
(cl:defconstant S-ISUID 2048 "NIL")
(cl:export 'S-ISUID)
(cl:defconstant S-ISGID 1024 "NIL")
(cl:export 'S-ISGID)
(cl:defconstant S-ISVTX 512 "NIL")
(cl:export 'S-ISVTX)
(cl:defconstant S-IRUSR 256 "NIL")
(cl:export 'S-IRUSR)
(cl:defconstant S-IWUSR 128 "NIL")
(cl:export 'S-IWUSR)
(cl:defconstant S-IXUSR 64 "NIL")
(cl:export 'S-IXUSR)
(cl:defconstant S-IREAD 256 "NIL")
(cl:export 'S-IREAD)
(cl:defconstant S-IWRITE 128 "NIL")
(cl:export 'S-IWRITE)
(cl:defconstant S-IEXEC 64 "NIL")
(cl:export 'S-IEXEC)
(cl:defconstant S-IRGRP 32 "NIL")
(cl:export 'S-IRGRP)
(cl:defconstant S-IWGRP 16 "NIL")
(cl:export 'S-IWGRP)
(cl:defconstant S-IXGRP 8 "NIL")
(cl:export 'S-IXGRP)
(cl:defconstant S-IROTH 4 "NIL")
(cl:export 'S-IROTH)
(cl:defconstant S-IWOTH 2 "NIL")
(cl:export 'S-IWOTH)
(cl:defconstant S-IXOTH 1 "NIL")
(cl:export 'S-IXOTH)
(cl:defconstant R-OK 4 "NIL")
(cl:export 'R-OK)
(cl:defconstant W-OK 2 "NIL")
(cl:export 'W-OK)
(cl:defconstant X-OK 1 "NIL")
(cl:export 'X-OK)
(cl:defconstant F-OK 0 "NIL")
(cl:export 'F-OK)
(cl:eval-when (:compile-toplevel :load-toplevel :execute) (sb-alien:define-alien-type OFF-T (sb-alien:signed 64)))
(cl:defconstant PROT-NONE 0 "mmap: no protection")
(cl:export 'PROT-NONE)
(cl:defconstant PROT-READ 1 "mmap: read protection")
(cl:export 'PROT-READ)
(cl:defconstant PROT-WRITE 2 "mmap: write protection")
(cl:export 'PROT-WRITE)
(cl:defconstant PROT-EXEC 4 "mmap: execute protection")
(cl:export 'PROT-EXEC)
(cl:defconstant MAP-SHARED 1 "mmap: shared memory")
(cl:export 'MAP-SHARED)
(cl:defconstant MAP-PRIVATE 2 "mmap: private mapping")
(cl:export 'MAP-PRIVATE)
(cl:defconstant MAP-FIXED 16 "mmap: map at given location")
(cl:export 'MAP-FIXED)
(cl:defconstant MAP-ANON 4096 "mmap: anonymous mapping not associated with any file")
(cl:export 'MAP-ANON)
(cl:defconstant MS-ASYNC 1 "msync: return immediately")
(cl:export 'MS-ASYNC)
(cl:defconstant MS-SYNC 16 "msync: perform synchronous writes")
(cl:export 'MS-SYNC)
(cl:defconstant MS-INVALIDATE 2 "msync: invalidate all cached data")
(cl:export 'MS-INVALIDATE)
(cl:defconstant MCL-CURRENT 1 "mlockall: lock all pages which are currently mapped into the address space of the process.")
(cl:export 'MCL-CURRENT)
(cl:defconstant MCL-FUTURE 2 "mlockall: lock all pages which will become mapped into the address space of the process in the future.")
(cl:export 'MCL-FUTURE)
(cl:eval-when (:compile-toplevel :load-toplevel :execute) (sb-grovel::define-c-struct DIRENT 264
 (INO INO-T "ino_t"
  0
  4)
 (NAME C-STRING "char *"
  8
  256)
))
(cl:eval-when (:compile-toplevel :load-toplevel :execute) (sb-grovel::define-c-struct ALIEN-PASSWD 40
 (NAME C-STRING-POINTER "char *"
  0
  4)
 (PASSWD C-STRING-POINTER "char *"
  4
  4)
 (UID UID-T "uid_t"
  8
  4)
 (GID GID-T "gid_t"
  12
  4)
 (GECOS C-STRING-POINTER "char *"
  24
  4)
 (DIR C-STRING-POINTER "char *"
  28
  4)
 (SHELL C-STRING-POINTER "char *"
  32
  4)
))
(cl:eval-when (:compile-toplevel :load-toplevel :execute) (sb-grovel::define-c-struct ALIEN-GROUP 16
 (NAME C-STRING-POINTER "char *"
  0
  4)
 (PASSWD C-STRING-POINTER "char *"
  4
  4)
 (GID GID-T "gid_t"
  8
  4)
))
(cl:eval-when (:compile-toplevel :load-toplevel :execute) (sb-grovel::define-c-struct ALIEN-STAT 96
 (MODE MODE-T "mode_t"
  8
  2)
 (INO INO-T "ino_t"
  4
  4)
 (DEV DEV-T "dev_t"
  0
  4)
 (NLINK NLINK-T "nlink_t"
  10
  2)
 (UID UID-T "uid_t"
  12
  4)
 (RDEV DEV-T "dev_t"
  20
  4)
 (GID GID-T "gid_t"
  16
  4)
 (SIZE OFF-T "off_t"
  48
  8)
 (ATIME TIME-T "time_t"
  24
  4)
 (MTIME TIME-T "time_t"
  32
  4)
 (CTIME TIME-T "time_t"
  40
  4)
))
(cl:eval-when (:compile-toplevel :load-toplevel :execute) (sb-grovel::define-c-struct ALIEN-TIMESPEC 8
 (TV-SEC TIME-T "time_t"
  0
  4)
 (TV-NSEC LONG "long"
  4
  4)
))
(cl:defconstant O-RDONLY 0 "NIL")
(cl:export 'O-RDONLY)
(cl:defconstant O-WRONLY 1 "NIL")
(cl:export 'O-WRONLY)
(cl:defconstant O-RDWR 2 "NIL")
(cl:export 'O-RDWR)
(cl:defconstant O-CREAT 512 "NIL")
(cl:export 'O-CREAT)
(cl:defconstant O-EXCL 2048 "NIL")
(cl:export 'O-EXCL)
(cl:defconstant O-NOCTTY 131072 "NIL")
(cl:export 'O-NOCTTY)
(cl:defconstant O-TRUNC 1024 "NIL")
(cl:export 'O-TRUNC)
(cl:defconstant O-APPEND 8 "NIL")
(cl:export 'O-APPEND)
(cl:defconstant O-NONBLOCK 4 "NIL")
(cl:export 'O-NONBLOCK)
(cl:defconstant O-NDELAY 4 "NIL")
(cl:export 'O-NDELAY)
(cl:defconstant O-SYNC 128 "NIL")
(cl:export 'O-SYNC)
(cl:defconstant O-NOFOLLOW 256 "NIL")
(cl:export 'O-NOFOLLOW)
(cl:defconstant O-DIRECTORY 1048576 "NIL")
(cl:export 'O-DIRECTORY)
(sb-int:style-warn "Couldn't grovel for O_DIRECT (unknown to the C compiler).")
(cl:export 'O-DIRECT)
(cl:defconstant O-ASYNC 64 "NIL")
(cl:export 'O-ASYNC)
(sb-int:style-warn "Couldn't grovel for O_LARGEFILE (unknown to the C compiler).")
(cl:export 'O-LARGEFILE)
(cl:defconstant O-DSYNC 4194304 "NIL")
(cl:export 'O-DSYNC)
(sb-int:style-warn "Couldn't grovel for O_RSYNC (unknown to the C compiler).")
(cl:export 'O-RSYNC)
(cl:defconstant SEEK-SET 0 "NIL")
(cl:export 'SEEK-SET)
(cl:defconstant SEEK-CUR 1 "NIL")
(cl:export 'SEEK-CUR)
(cl:defconstant SEEK-END 2 "NIL")
(cl:export 'SEEK-END)
(cl:defconstant F-DUPFD 0 "NIL")
(cl:export 'F-DUPFD)
(cl:defconstant F-GETFD 1 "NIL")
(cl:export 'F-GETFD)
(cl:defconstant F-SETFD 2 "NIL")
(cl:export 'F-SETFD)
(cl:defconstant F-GETFL 3 "NIL")
(cl:export 'F-GETFL)
(cl:defconstant F-SETFL 4 "NIL")
(cl:export 'F-SETFL)
(cl:defconstant F-GETLK 7 "NIL")
(cl:export 'F-GETLK)
(cl:defconstant F-SETLK 8 "NIL")
(cl:export 'F-SETLK)
(cl:defconstant F-SETLKW 9 "NIL")
(cl:export 'F-SETLKW)
(cl:defconstant F-GETOWN 5 "NIL")
(cl:export 'F-GETOWN)
(cl:defconstant F-SETOWN 6 "NIL")
(cl:export 'F-SETOWN)
(cl:defconstant F-RDLCK 1 "NIL")
(cl:export 'F-RDLCK)
(cl:defconstant F-WRLCK 3 "NIL")
(cl:export 'F-WRLCK)
(cl:defconstant F-UNLCK 2 "NIL")
(cl:export 'F-UNLCK)
(cl:eval-when (:compile-toplevel :load-toplevel :execute) (sb-grovel::define-c-struct ALIEN-FLOCK 24
 (TYPE SHORT "short"
  20
  2)
 (WHENCE SHORT "short"
  22
  2)
 (START OFF-T "off_t"
  0
  8)
 (LEN OFF-T "off_t"
  8
  8)
 (PID PID-T "pid_t"
  16
  4)
))
(cl:defconstant F-LOCK 1 "NIL")
(cl:export 'F-LOCK)
(cl:defconstant F-TLOCK 2 "NIL")
(cl:export 'F-TLOCK)
(cl:defconstant F-ULOCK 0 "NIL")
(cl:export 'F-ULOCK)
(cl:defconstant F-TEST 3 "NIL")
(cl:export 'F-TEST)
(cl:eval-when (:compile-toplevel :load-toplevel :execute) (sb-alien:define-alien-type CC-T (sb-alien:unsigned 8)))
(cl:eval-when (:compile-toplevel :load-toplevel :execute) (sb-alien:define-alien-type SPEED-T (sb-alien:unsigned 32)))
(cl:export 'SPEED-T)
(cl:eval-when (:compile-toplevel :load-toplevel :execute) (sb-alien:define-alien-type TCFLAG-T (sb-alien:unsigned 32)))
(cl:export 'TCFLAG-T)
(cl:defconstant NCCS 20 "NIL")
(cl:export 'NCCS)
(cl:eval-when (:compile-toplevel :load-toplevel :execute) (sb-grovel::define-c-struct ALIEN-TERMIOS 44
 (IFLAG TCFLAG-T "tcflag_t"
  0
  4)
 (OFLAG TCFLAG-T "tcflag_t"
  4
  4)
 (CFLAG TCFLAG-T "tcflag_t"
  8
  4)
 (LFLAG TCFLAG-T "tcflag_t"
  12
  4)
 (CC (ARRAY CC-T) "cc_t"
  16
  20)
))
(cl:eval-when (:compile-toplevel :load-toplevel :execute) (sb-alien:define-alien-type SUSECONDS-T (sb-alien:signed 32)))
(cl:eval-when (:compile-toplevel :load-toplevel :execute) (sb-grovel::define-c-struct ALIEN-UTIMBUF 8
 (ACTIME TIME-T "time_t"
  0
  4)
 (MODTIME TIME-T "time_t"
  4
  4)
))
(cl:eval-when (:compile-toplevel :load-toplevel :execute) (sb-grovel::define-c-struct ALIEN-TIMEVAL 8
 (SEC TIME-T "time_t"
  0
  4)
 (USEC SUSECONDS-T "suseconds_t"
  4
  4)
))
(cl:defconstant VEOF 0 "NIL")
(cl:export 'VEOF)
(cl:defconstant VEOL 1 "NIL")
(cl:export 'VEOL)
(cl:defconstant VERASE 3 "NIL")
(cl:export 'VERASE)
(cl:defconstant VINTR 8 "NIL")
(cl:export 'VINTR)
(cl:defconstant VKILL 5 "NIL")
(cl:export 'VKILL)
(cl:defconstant VMIN 16 "NIL")
(cl:export 'VMIN)
(cl:defconstant VQUIT 9 "NIL")
(cl:export 'VQUIT)
(cl:defconstant VSTART 12 "NIL")
(cl:export 'VSTART)
(cl:defconstant VSTOP 13 "NIL")
(cl:export 'VSTOP)
(cl:defconstant VSUSP 10 "NIL")
(cl:export 'VSUSP)
(cl:defconstant VTIME 17 "NIL")
(cl:export 'VTIME)
(cl:defconstant VDISABLE 255 "NIL")
(cl:export 'VDISABLE)
(cl:defconstant BRKINT 2 "NIL")
(cl:export 'BRKINT)
(cl:defconstant ICRNL 256 "NIL")
(cl:export 'ICRNL)
(cl:defconstant IGNBRK 1 "NIL")
(cl:export 'IGNBRK)
(cl:defconstant IGNCR 128 "NIL")
(cl:export 'IGNCR)
(cl:defconstant IGNPAR 4 "NIL")
(cl:export 'IGNPAR)
(cl:defconstant INLCR 64 "NIL")
(cl:export 'INLCR)
(cl:defconstant INPCK 16 "NIL")
(cl:export 'INPCK)
(cl:defconstant ISTRIP 32 "NIL")
(cl:export 'ISTRIP)
(cl:defconstant IXOFF 1024 "NIL")
(cl:export 'IXOFF)
(cl:defconstant IXON 512 "NIL")
(cl:export 'IXON)
(cl:defconstant PARMRK 8 "NIL")
(cl:export 'PARMRK)
(cl:defconstant OPOST 1 "NIL")
(cl:export 'OPOST)
(cl:defconstant OCRNL 16 "NIL")
(cl:export 'OCRNL)
(cl:defconstant ONOCR 32 "NIL")
(cl:export 'ONOCR)
(cl:defconstant ONLRET 64 "NIL")
(cl:export 'ONLRET)
(cl:defconstant OFDEL 131072 "NIL")
(cl:export 'OFDEL)
(cl:defconstant OFILL 128 "NIL")
(cl:export 'OFILL)
(cl:defconstant NLDLY 768 "NIL")
(cl:export 'NLDLY)
(cl:defconstant NL0 0 "NIL")
(cl:export 'NL0)
(cl:defconstant NL1 256 "NIL")
(cl:export 'NL1)
(cl:defconstant CRDLY 12288 "NIL")
(cl:export 'CRDLY)
(cl:defconstant CR0 0 "NIL")
(cl:export 'CR0)
(cl:defconstant CR1 4096 "NIL")
(cl:export 'CR1)
(cl:defconstant CR2 8192 "NIL")
(cl:export 'CR2)
(cl:defconstant CR3 12288 "NIL")
(cl:export 'CR3)
(cl:defconstant TABDLY 3076 "NIL")
(cl:export 'TABDLY)
(cl:defconstant TAB0 0 "NIL")
(cl:export 'TAB0)
(cl:defconstant TAB1 1024 "NIL")
(cl:export 'TAB1)
(cl:defconstant TAB2 2048 "NIL")
(cl:export 'TAB2)
(cl:defconstant TAB3 4 "NIL")
(cl:export 'TAB3)
(cl:defconstant BSDLY 32768 "NIL")
(cl:export 'BSDLY)
(cl:defconstant BS0 0 "NIL")
(cl:export 'BS0)
(cl:defconstant BS1 32768 "NIL")
(cl:export 'BS1)
(cl:defconstant VTDLY 65536 "NIL")
(cl:export 'VTDLY)
(cl:defconstant VT0 0 "NIL")
(cl:export 'VT0)
(cl:defconstant VT1 65536 "NIL")
(cl:export 'VT1)
(cl:defconstant FFDLY 16384 "NIL")
(cl:export 'FFDLY)
(cl:defconstant FF0 0 "NIL")
(cl:export 'FF0)
(cl:defconstant FF1 16384 "NIL")
(cl:export 'FF1)
(cl:defconstant B0 0 "NIL")
(cl:export 'B0)
(cl:defconstant B50 50 "NIL")
(cl:export 'B50)
(cl:defconstant B75 75 "NIL")
(cl:export 'B75)
(cl:defconstant B110 110 "NIL")
(cl:export 'B110)
(cl:defconstant B134 134 "NIL")
(cl:export 'B134)
(cl:defconstant B150 150 "NIL")
(cl:export 'B150)
(cl:defconstant B200 200 "NIL")
(cl:export 'B200)
(cl:defconstant B300 300 "NIL")
(cl:export 'B300)
(cl:defconstant B600 600 "NIL")
(cl:export 'B600)
(cl:defconstant B1200 1200 "NIL")
(cl:export 'B1200)
(cl:defconstant B1800 1800 "NIL")
(cl:export 'B1800)
(cl:defconstant B2400 2400 "NIL")
(cl:export 'B2400)
(cl:defconstant B4800 4800 "NIL")
(cl:export 'B4800)
(cl:defconstant B9600 9600 "NIL")
(cl:export 'B9600)
(cl:defconstant B19200 19200 "NIL")
(cl:export 'B19200)
(cl:defconstant B38400 38400 "NIL")
(cl:export 'B38400)
(cl:defconstant B57600 57600 "NIL")
(cl:export 'B57600)
(cl:defconstant B115200 115200 "NIL")
(cl:export 'B115200)
(cl:defconstant B230400 230400 "NIL")
(cl:export 'B230400)
(cl:defconstant CSIZE 768 "NIL")
(cl:export 'CSIZE)
(cl:defconstant CS5 0 "NIL")
(cl:export 'CS5)
(cl:defconstant CS6 256 "NIL")
(cl:export 'CS6)
(cl:defconstant CS7 512 "NIL")
(cl:export 'CS7)
(cl:defconstant CS8 768 "NIL")
(cl:export 'CS8)
(cl:defconstant CSTOPB 1024 "NIL")
(cl:export 'CSTOPB)
(cl:defconstant CREAD 2048 "NIL")
(cl:export 'CREAD)
(cl:defconstant PARENB 4096 "NIL")
(cl:export 'PARENB)
(cl:defconstant PARODD 8192 "NIL")
(cl:export 'PARODD)
(cl:defconstant HUPCL 16384 "NIL")
(cl:export 'HUPCL)
(cl:defconstant CLOCAL 32768 "NIL")
(cl:export 'CLOCAL)
(cl:defconstant ECHO 8 "NIL")
(cl:export 'ECHO)
(cl:defconstant ECHOE 2 "NIL")
(cl:export 'ECHOE)
(cl:defconstant ECHOK 4 "NIL")
(cl:export 'ECHOK)
(cl:defconstant ECHONL 16 "NIL")
(cl:export 'ECHONL)
(cl:defconstant ICANON 256 "NIL")
(cl:export 'ICANON)
(cl:defconstant IEXTEN 1024 "NIL")
(cl:export 'IEXTEN)
(cl:defconstant ISIG 128 "NIL")
(cl:export 'ISIG)
(cl:defconstant NOFLSH -2147483648 "NIL")
(cl:export 'NOFLSH)
(cl:defconstant TOSTOP 4194304 "NIL")
(cl:export 'TOSTOP)
(cl:defconstant TCSANOW 0 "NIL")
(cl:export 'TCSANOW)
(cl:defconstant TCSADRAIN 1 "NIL")
(cl:export 'TCSADRAIN)
(cl:defconstant TCSAFLUSH 2 "NIL")
(cl:export 'TCSAFLUSH)
(cl:defconstant TCIFLUSH 1 "NIL")
(cl:export 'TCIFLUSH)
(cl:defconstant TCIOFLUSH 3 "NIL")
(cl:export 'TCIOFLUSH)
(cl:defconstant TCOFLUSH 2 "NIL")
(cl:export 'TCOFLUSH)
(cl:defconstant TCIOFF 3 "NIL")
(cl:export 'TCIOFF)
(cl:defconstant TCION 4 "NIL")
(cl:export 'TCION)
(cl:defconstant TCOOFF 1 "NIL")
(cl:export 'TCOOFF)
(cl:defconstant TCOON 2 "NIL")
(cl:export 'TCOON)
(cl:defconstant LOG-USER 8 "Default openlog() faclity.")
(cl:export 'LOG-USER)
(cl:defconstant LOG-LOCAL0 128 "Locally-defined openlog() facility")
(cl:export 'LOG-LOCAL0)
(cl:defconstant LOG-LOCAL1 136 "Locally-defined openlog() facility")
(cl:export 'LOG-LOCAL1)
(cl:defconstant LOG-LOCAL2 144 "Locally-defined openlog() facility")
(cl:export 'LOG-LOCAL2)
(cl:defconstant LOG-LOCAL3 152 "Locally-defined openlog() facility")
(cl:export 'LOG-LOCAL3)
(cl:defconstant LOG-LOCAL4 160 "Locally-defined openlog() facility")
(cl:export 'LOG-LOCAL4)
(cl:defconstant LOG-LOCAL5 168 "Locally-defined openlog() facility")
(cl:export 'LOG-LOCAL5)
(cl:defconstant LOG-LOCAL6 176 "Locally-defined openlog() facility")
(cl:export 'LOG-LOCAL6)
(cl:defconstant LOG-LOCAL7 184 "Locally-defined openlog() facility")
(cl:export 'LOG-LOCAL7)
(cl:defconstant LOG-AUTHPRIV 80 "openlog() facility for authorization messages")
(cl:export 'LOG-AUTHPRIV)
(cl:defconstant LOG-CRON 72 "openlog() facility for cron and at daemons")
(cl:export 'LOG-CRON)
(cl:defconstant LOG-DAEMON 24 "openlog() facility for arbitrary daemons")
(cl:export 'LOG-DAEMON)
(cl:defconstant LOG-FTP 88 "openlog() facility for FTP daemons")
(cl:export 'LOG-FTP)
(cl:defconstant LOG-KERN 0 "openlog() facility for kernel messages")
(cl:export 'LOG-KERN)
(cl:defconstant LOG-LPR 48 "openlog() facility for the printer subsystem")
(cl:export 'LOG-LPR)
(cl:defconstant LOG-MAIL 16 "openlog() facility for the mail subsystem")
(cl:export 'LOG-MAIL)
(cl:defconstant LOG-NEWS 56 "openlog() facility for the usenet subsystem")
(cl:export 'LOG-NEWS)
(cl:defconstant LOG-SYSLOG 40 "openlog() facility for the syslog subsystem")
(cl:export 'LOG-SYSLOG)
(cl:defconstant LOG-UUCP 64 "openlog() facility for the UUCP subsystem")
(cl:export 'LOG-UUCP)
(cl:defconstant LOG-PID 1 "If supplied to openlog(), log the process ID with each message")
(cl:export 'LOG-PID)
(cl:defconstant LOG-CONS 2 "If supplied to openlog(), log to the system console as well as logfiles")
(cl:export 'LOG-CONS)
(cl:defconstant LOG-NDELAY 8 "If supplied to openlog(), immediately open the syslog connection.")
(cl:export 'LOG-NDELAY)
(cl:defconstant LOG-ODELAY 4 "If supplied to openlog(), delay opening the syslog connection to the first syslog() call.")
(cl:export 'LOG-ODELAY)
(cl:defconstant LOG-NOWAIT 16 "If supplied to openlog(), do not wait for child processes created by calls to syslog().")
(cl:export 'LOG-NOWAIT)
(cl:defconstant LOG-PERROR 32 "If supplied to openlog(), write log messages to the process's standard error descriptor in addition to the logging facility.")
(cl:export 'LOG-PERROR)
(cl:defconstant LOG-EMERG 0 "Log severity level denoting a panic.")
(cl:export 'LOG-EMERG)
(cl:defconstant LOG-ALERT 1 "Log severity level denoting a condition that should be corrected immediately.")
(cl:export 'LOG-ALERT)
(cl:defconstant LOG-CRIT 2 "Log severity level denoting critical conditions.")
(cl:export 'LOG-CRIT)
(cl:defconstant LOG-ERR 3 "Log severity level denoting an error.")
(cl:export 'LOG-ERR)
(cl:defconstant LOG-WARNING 4 "Log severity level denoting a warning.")
(cl:export 'LOG-WARNING)
(cl:defconstant LOG-NOTICE 5 "Log severity level denoting non-errors that may require special handling.")
(cl:export 'LOG-NOTICE)
(cl:defconstant LOG-INFO 6 "Log severity level denoting informational messages.")
(cl:export 'LOG-INFO)
(cl:defconstant LOG-DEBUG 7 "Log severity level denoting debugging information .")
(cl:export 'LOG-DEBUG)
